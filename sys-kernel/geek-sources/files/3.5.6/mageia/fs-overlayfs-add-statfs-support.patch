commit 0a83092f3378cd1ef48f8f2738ab9cf572b5b4a0
Author: Andy Whitcroft <apw@canonical.com>
Date:   Fri Oct 1 18:48:02 2010 +0100

    UBUNTU: ubuntu: overlayfs -- overlayfs: add statfs support
    
    Add support for statfs to the overlayfs filesystem.  As the upper layer
    is the target of all write operations assume that the space in that
    filesystem is the space in the overlayfs.  There will be some inaccuracy as
    overwriting a file will copy it up and consume space we were not expecting,
    but it is better than nothing.
    
    Use the upper layer dentry and mount from the overlayfs root inode,
    passing the statfs call to that filesystem.
    
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>

diff --git a/fs/overlayfs/super.c b/fs/overlayfs/super.c
index 0aaa4c2..50cbef5 100644
--- a/fs/overlayfs/super.c
+++ b/fs/overlayfs/super.c
@@ -406,9 +406,29 @@ static int ovl_remount_fs(struct super_block *sb, int *flagsp, char *data)
 		return mnt_want_write(ufs->upper_mnt);
 }
 
+/**
+ * ovl_statfs
+ * @sb: The overlayfs super block
+ * @buf: The struct kstatfs to fill in with stats
+ *
+ * Get the filesystem statistics.  As writes always target the upper layer
+ * filesystem pass the statfs to the same filesystem.
+ */
+static int ovl_statfs(struct dentry *dentry, struct kstatfs *buf)
+{
+	struct dentry *root_dentry = dentry->d_sb->s_root;
+	struct path path;
+	ovl_path_upper(root_dentry, &path);
+
+	if (!path.dentry->d_sb->s_op->statfs)
+		return -ENOSYS;
+	return path.dentry->d_sb->s_op->statfs(path.dentry, buf);
+}
+
 static const struct super_operations ovl_super_operations = {
 	.put_super	= ovl_put_super,
 	.remount_fs	= ovl_remount_fs,
+	.statfs		= ovl_statfs,
 };
 
 struct ovl_config {
