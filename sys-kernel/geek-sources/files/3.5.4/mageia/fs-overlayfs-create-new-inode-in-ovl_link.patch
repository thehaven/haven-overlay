commit f2ea38feafa830106412e5def371679ab23279c4
Author: Robin Dong <hao.bigrat@gmail.com>
Date:   Mon Mar 12 13:44:59 2012 +0800

    UBUNTU: ubuntu: overlayfs -- overlayfs: create new inode in ovl_link
    
    Imaging using ext4 as upperdir which has a file "hello" and lowdir is
    totally empty.
    
    1. mount -t overlayfs overlayfs -o lowerdir=/lower,upperdir=/upper /overlay
    2. cd /overlay
    3. ln hello bye
    
    then the overlayfs code will call vfs_link to create a real ext4
    dentry for "bye" and create
    a new overlayfs dentry point to overlayfs inode (which standed for
    "hello"). That means:
    	two overlayfs dentries and only one overlayfs inode.
    
    and then
    
    4. umount /overlay
    5. mount -t overlayfs overlayfs -o lowerdir=/lower,upperdir=/upper
    /overlay (again)
    6. cd /overlay
    7. ls hello bye
    
    the overlayfs will create two inodes(one for the "hello", another
    for the "bye") and two dentries (each point a inode).That means:
    	two dentries and two inodes.
    
    As above, with different order of "create link" and "mount", the
    result is not the same.
    
    In order to make the behavior coherent, we need to create inode in ovl_link.
    
    Signed-off-by: Robin Dong <sanbai@taobao.com>
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>

diff --git a/fs/overlayfs/dir.c b/fs/overlayfs/dir.c
index 00aa6d9..c914c97 100644
--- a/fs/overlayfs/dir.c
+++ b/fs/overlayfs/dir.c
@@ -417,6 +417,7 @@ static int ovl_link(struct dentry *old, struct inode *newdir,
 	struct dentry *olddentry;
 	struct dentry *newdentry;
 	struct dentry *upperdir;
+	struct inode *newinode;
 
 	err = ovl_copy_up(old);
 	if (err)
@@ -441,13 +442,17 @@ static int ovl_link(struct dentry *old, struct inode *newdir,
 			err = -ENOENT;
 			goto out_unlock;
 		}
+		newinode = ovl_new_inode(old->d_sb, newdentry->d_inode->i_mode,
+				new->d_fsdata);
+		if (!newinode)
+			goto link_fail;
 
 		ovl_dentry_version_inc(new->d_parent);
 		ovl_dentry_update(new, newdentry);
 
-		ihold(old->d_inode);
-		d_instantiate(new, old->d_inode);
+		d_instantiate(new, newinode);
 	} else {
+link_fail:
 		if (ovl_dentry_is_opaque(new))
 			ovl_whiteout(upperdir, new);
 		dput(newdentry);
