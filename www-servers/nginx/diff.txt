--- nginx-1.9.13.ebuild	2016-04-07 14:07:42.299676634 +0100
+++ /usr/portage/www-servers/nginx/nginx-1.9.13.ebuild	2016-03-31 04:44:14.000000000 +0100
@@ -1,31 +1,22 @@
-# Copyright 1999-2014 Gentoo Foundation
+# Copyright 1999-2016 Gentoo Foundation
 # Distributed under the terms of the GNU General Public License v2
+# $Id$
 
-EAPI=5
+EAPI=6
 
 # Maintainer notes:
 # - http_rewrite-independent pcre-support makes sense for matching locations without an actual rewrite
 # - any http-module activates the main http-functionality and overrides USE=-http
 # - keep the following requirements in mind before adding external modules:
-#   * alive upstream
-#   * sane packaging
-#   * builds cleanly
-#   * does not need a patch for nginx core
+#	* alive upstream
+#	* sane packaging
+#	* builds cleanly
+#	* does not need a patch for nginx core
 # - TODO: test the google-perftools module (included in vanilla tarball)
 
 # prevent perl-module from adding automagic perl DEPENDs
 GENTOO_DEPEND_ON_PERL="no"
 
-# ngx_pagespeed (https://github.com/pagespeed/ngx_pagespeed, Apache 2 license)
-NGX_PAGESPEED_MODULE_PV="1.10.33.4-beta"
-NGX_PAGESPEED_MODULE_P="ngx_pagespeed"
-NGX_PAGESPEED_MODULE_WD=${WORKDIR}/${NGX_PAGESPEED_MODULE_P}-master
-# psol required for pagespeed
-NGX_PAGESPEED_PSOL_P="ngx_pagespeed_psol"
-NGX_PAGESPEED_PSOL_PV="1.10.33.4"
-NGX_PAGESPEED_PSOL_URI="https://dl.google.com/dl/page-speed/psol/${NGX_PAGESPEED_PSOL_PV}.tar.gz"
-NGX_PAGESPEED_PSOL_WD=${WORKDIR}/${NGX_PAGESPEED_MODULE_P}-${NGX_PAGESPEED_MODULE_PV}
-
 # devel_kit (https://github.com/simpl/ngx_devel_kit, BSD license)
 DEVEL_KIT_MODULE_PV="0.2.19"
 DEVEL_KIT_MODULE_P="ngx_devel_kit-${DEVEL_KIT_MODULE_PV}-r1"
@@ -38,7 +29,7 @@ HTTP_UPLOAD_PROGRESS_MODULE_P="ngx_http_
 HTTP_UPLOAD_PROGRESS_MODULE_URI="https://github.com/masterzen/nginx-upload-progress-module/archive/v${HTTP_UPLOAD_PROGRESS_MODULE_PV}.tar.gz"
 HTTP_UPLOAD_PROGRESS_MODULE_WD="${WORKDIR}/nginx-upload-progress-module-${HTTP_UPLOAD_PROGRESS_MODULE_PV}"
 
-# http_headers_more (https://github.com.com/agentzh/headers-more-nginx-module, BSD license)
+# http_headers_more (https://github.com/agentzh/headers-more-nginx-module, BSD license)
 HTTP_HEADERS_MORE_MODULE_PV="0.29"
 HTTP_HEADERS_MORE_MODULE_P="ngx_http_headers_more-${HTTP_HEADERS_MORE_MODULE_PV}"
 HTTP_HEADERS_MORE_MODULE_URI="https://github.com/agentzh/headers-more-nginx-module/archive/v${HTTP_HEADERS_MORE_MODULE_PV}.tar.gz"
@@ -63,7 +54,7 @@ HTTP_FANCYINDEX_MODULE_URI="https://gith
 HTTP_FANCYINDEX_MODULE_WD="${WORKDIR}/ngx-fancyindex-${HTTP_FANCYINDEX_MODULE_PV}"
 
 # http_lua (https://github.com/openresty/lua-nginx-module, BSD license)
-HTTP_LUA_MODULE_PV="0.10.1rc1"
+HTTP_LUA_MODULE_PV="0.10.2"
 HTTP_LUA_MODULE_P="ngx_http_lua-${HTTP_LUA_MODULE_PV}"
 HTTP_LUA_MODULE_URI="https://github.com/openresty/lua-nginx-module/archive/v${HTTP_LUA_MODULE_PV}.tar.gz"
 HTTP_LUA_MODULE_WD="${WORKDIR}/lua-nginx-module-${HTTP_LUA_MODULE_PV}"
@@ -112,12 +103,12 @@ HTTP_ECHO_MODULE_WD="${WORKDIR}/echo-ngi
 
 # mod_security for nginx (https://modsecurity.org/, Apache-2.0)
 # keep the MODULE_P here consistent with upstream to avoid tarball duplication
-HTTP_SECURITY_MODULE_PV="2.9.0"
-HTTP_SECURITY_MODULE_P="modsecurity-apache_${HTTP_SECURITY_MODULE_PV}"
+HTTP_SECURITY_MODULE_PV="2.9.1"
+HTTP_SECURITY_MODULE_P="modsecurity-${HTTP_SECURITY_MODULE_PV}"
 HTTP_SECURITY_MODULE_URI="https://www.modsecurity.org/tarball/${HTTP_SECURITY_MODULE_PV}/${HTTP_SECURITY_MODULE_P}.tar.gz"
 HTTP_SECURITY_MODULE_WD="${WORKDIR}/${HTTP_SECURITY_MODULE_P}"
 
-# push-stream-module (https://github.com/wandenberg/nginx-push-stream-module, GPL-3)
+# push-stream-module (http://www.nginxpushstream.com, https://github.com/wandenberg/nginx-push-stream-module, GPL-3)
 HTTP_PUSH_STREAM_MODULE_PV="0.5.1"
 HTTP_PUSH_STREAM_MODULE_P="ngx_http_push_stream-${HTTP_PUSH_STREAM_MODULE_PV}"
 HTTP_PUSH_STREAM_MODULE_URI="https://github.com/wandenberg/nginx-push-stream-module/archive/${HTTP_PUSH_STREAM_MODULE_PV}.tar.gz"
@@ -127,12 +118,7 @@ HTTP_PUSH_STREAM_MODULE_WD="${WORKDIR}/n
 HTTP_STICKY_MODULE_PV="1.2.6"
 HTTP_STICKY_MODULE_P="nginx_http_sticky_module_ng-${HTTP_STICKY_MODULE_PV}"
 HTTP_STICKY_MODULE_URI="https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng/get/${HTTP_STICKY_MODULE_PV}.tar.bz2"
-
-# ajp-module (https://github.com/yaoweibin/nginx_ajp_module, BSD-2)
-HTTP_AJP_MODULE_PV="0.3.0"
-HTTP_AJP_MODULE_P="ngx_http_ajp_module-${HTTP_AJP_MODULE_PV}"
-HTTP_AJP_MODULE_URI="https://github.com/yaoweibin/nginx_ajp_module/archive/v${HTTP_AJP_MODULE_PV}.tar.gz"
-HTTP_AJP_MODULE_WD="${WORKDIR}/nginx_ajp_module-${HTTP_AJP_MODULE_PV}"
+HTTP_STICKY_MODULE_WD="${WORKDIR}/nginx-goodies-nginx-sticky-module-ng-c78b7dd79d0d"
 
 # mogilefs-module (https://github.com/vkholodkov/nginx-mogilefs-module, BSD-2)
 HTTP_MOGILEFS_MODULE_PV="1.0.4"
@@ -147,20 +133,19 @@ HTTP_MEMC_MODULE_URI="https://github.com
 HTTP_MEMC_MODULE_WD="${WORKDIR}/memc-nginx-module-${HTTP_MEMC_MODULE_PV}"
 
 # nginx-ldap-auth-module (https://github.com/kvspb/nginx-auth-ldap, BSD-2)
-HTTP_LDAP_MODULE_PV="d0f2f829f708792ee97a9241c9c6ffd33c47c7c1"
+HTTP_LDAP_MODULE_PV="8517bb05ecc896b54429ca5e95137b0a386bd41a"
 HTTP_LDAP_MODULE_P="nginx-auth-ldap-${HTTP_LDAP_MODULE_PV}"
 HTTP_LDAP_MODULE_URI="https://github.com/kvspb/nginx-auth-ldap/archive/${HTTP_LDAP_MODULE_PV}.tar.gz"
 HTTP_LDAP_MODULE_WD="${WORKDIR}/nginx-auth-ldap-${HTTP_LDAP_MODULE_PV}"
 
-inherit eutils ssl-cert toolchain-funcs perl-module flag-o-matic user systemd versionator multilib
+# We handle deps below ourselves
+SSL_DEPS_SKIP=1
+
+inherit ssl-cert toolchain-funcs perl-module flag-o-matic user systemd versionator multilib
 
 DESCRIPTION="Robust, small and high performance http and reverse proxy server"
 HOMEPAGE="http://nginx.org"
 SRC_URI="http://nginx.org/download/${P}.tar.gz
-    nginx_modules_http_ngx_pagespeed? (
-      https://github.com/pagespeed/ngx_pagespeed/archive/master.zip -> ${NGX_PAGESPEED_MODULE_P}-${NGX_PAGESPEED_MODULE_PV}.zip
-      ${NGX_PAGESPEED_PSOL_URI} -> ${NGX_PAGESPEED_PSOL_P}-${NGX_PAGESPEED_PSOL_PV}.tar.gz
-    )
 	${DEVEL_KIT_MODULE_URI} -> ${DEVEL_KIT_MODULE_P}.tar.gz
 	nginx_modules_http_upload_progress? ( ${HTTP_UPLOAD_PROGRESS_MODULE_URI} -> ${HTTP_UPLOAD_PROGRESS_MODULE_P}.tar.gz )
 	nginx_modules_http_headers_more? ( ${HTTP_HEADERS_MORE_MODULE_URI} -> ${HTTP_HEADERS_MORE_MODULE_P}.tar.gz )
@@ -177,9 +162,7 @@ SRC_URI="http://nginx.org/download/${P}.
 	nginx_modules_http_echo? ( ${HTTP_ECHO_MODULE_URI} -> ${HTTP_ECHO_MODULE_P}.tar.gz )
 	nginx_modules_http_security? ( ${HTTP_SECURITY_MODULE_URI} -> ${HTTP_SECURITY_MODULE_P}.tar.gz )
 	nginx_modules_http_push_stream? ( ${HTTP_PUSH_STREAM_MODULE_URI} -> ${HTTP_PUSH_STREAM_MODULE_P}.tar.gz )
-   	nginx_modules_http_push_stream? ( ${HTTP_PUSH_STREAM_MODULE_URI} -> ${HTTP_PUSH_STREAM_MODULE_P}.tar.gz )
 	nginx_modules_http_sticky? ( ${HTTP_STICKY_MODULE_URI} -> ${HTTP_STICKY_MODULE_P}.tar.bz2 )
-	nginx_modules_http_ajp? ( ${HTTP_AJP_MODULE_URI} -> ${HTTP_AJP_MODULE_P}.tar.gz )
 	nginx_modules_http_mogilefs? ( ${HTTP_MOGILEFS_MODULE_URI} -> ${HTTP_MOGILEFS_MODULE_P}.tar.gz )
 	nginx_modules_http_memc? ( ${HTTP_MEMC_MODULE_URI} -> ${HTTP_MEMC_MODULE_P}.tar.gz )
 	nginx_modules_http_auth_ldap? ( ${HTTP_LDAP_MODULE_URI} -> ${HTTP_LDAP_MODULE_P}.tar.gz )"
@@ -191,11 +174,12 @@ LICENSE="BSD-2 BSD SSLeay MIT GPL-2 GPL-
 SLOT="mainline"
 KEYWORDS="~amd64 ~arm ~arm64 ~ppc ~x86 ~x86-fbsd ~amd64-linux ~x86-linux"
 
-NGINX_MODULES_STD="access auth_basic autoindex browser charset empty_gif fastcgi
-geo gzip limit_req limit_conn map memcached proxy referer rewrite scgi ssi
-split_clients upstream_ip_hash userid uwsgi"
-NGINX_MODULES_OPT="addition auth_request dav degradation flv geoip gunzip gzip_static
-image_filter mp4 perl random_index realip secure_link stub_status sub xslt"
+NGINX_MODULES_STD="access auth_basic autoindex browser charset empty_gif
+	fastcgi geo gzip limit_req limit_conn map memcached proxy referer
+	rewrite scgi ssi split_clients upstream_ip_hash userid uwsgi"
+NGINX_MODULES_OPT="addition auth_request dav degradation flv geoip gunzip
+	gzip_static image_filter mp4 perl random_index realip secure_link
+	slice stub_status sub xslt"
 NGINX_MODULES_STREAM="access limit_conn upstream"
 NGINX_MODULES_MAIL="imap pop3 smtp"
 NGINX_MODULES_3RD="
@@ -213,15 +197,14 @@ NGINX_MODULES_3RD="
 	http_echo
 	http_security
 	http_push_stream
-	http_ngx_pagespeed
-	http_redislog
-    http_sticky
-    http_ajp
+	http_sticky
+	http_ajp
 	http_mogilefs
 	http_memc
 	http_auth_ldap"
 
-IUSE="aio debug +http +http2 +http-cache ipv6 libatomic libressl luajit +pcre pcre-jit rtmp selinux ssl threads userland_GNU vim-syntax"
+IUSE="aio debug +http +http2 +http-cache ipv6 libatomic libressl luajit +pcre
+	pcre-jit rtmp selinux ssl threads userland_GNU vim-syntax"
 
 for mod in $NGINX_MODULES_STD; do
 	IUSE="${IUSE} +nginx_modules_http_${mod}"
@@ -243,22 +226,26 @@ for mod in $NGINX_MODULES_3RD; do
 	IUSE="${IUSE} nginx_modules_${mod}"
 done
 
+# Add so we can warn users updating about config changes
+# @TODO: jbergstroem: remove on next release series
+IUSE="${IUSE} nginx_modules_http_spdy"
+
 CDEPEND="
 	pcre? ( >=dev-libs/libpcre-4.2 )
 	pcre-jit? ( >=dev-libs/libpcre-8.20[jit] )
 	ssl? (
-	   	!libressl? ( dev-libs/openssl:0= )
-   		libressl? ( dev-libs/libressl:= )
- 	)
+		!libressl? ( dev-libs/openssl:0= )
+		libressl? ( dev-libs/libressl:= )
+	)
 	http2? (
-  		!libressl? ( >=dev-libs/openssl-1.0.1c:0= )
-  		libressl? ( dev-libs/libressl:= )
+		!libressl? ( >=dev-libs/openssl-1.0.1c:0= )
+		libressl? ( dev-libs/libressl:= )
 	)
 	http-cache? (
-  		userland_GNU? (
-    		!libressl? ( dev-libs/openssl:0= )
-    		libressl? ( dev-libs/libressl:= )
-  		)
+		userland_GNU? (
+			!libressl? ( dev-libs/openssl:0= )
+			libressl? ( dev-libs/libressl:= )
+		)
 	)
 	nginx_modules_http_geoip? ( dev-libs/geoip )
 	nginx_modules_http_gunzip? ( sys-libs/zlib )
@@ -269,9 +256,9 @@ CDEPEND="
 	nginx_modules_http_rewrite? ( >=dev-libs/libpcre-4.2 )
 	nginx_modules_http_secure_link? (
 		userland_GNU? (
-    		!libressl? ( dev-libs/openssl:0= )
-    		libressl? ( dev-libs/libressl:= )
-  		)
+			!libressl? ( dev-libs/openssl:0= )
+			libressl? ( dev-libs/libressl:= )
+		)
 	)
 	nginx_modules_http_xslt? ( dev-libs/libxml2 dev-libs/libxslt )
 	nginx_modules_http_lua? ( !luajit? ( dev-lang/lua:0= ) luajit? ( dev-lang/luajit:2= ) )
@@ -323,44 +310,30 @@ pkg_setup() {
 		ewarn "all nginx http modules."
 	fi
 
-        if use nginx_modules_http_ajp; then
-                eerror "The AJP module currently doesn't build for nginx >1.8."
-                eerror "It will be reintroduced with the 1.9 series when proven stable."
-                eerror "Either disable it or stick with nginx 1.7.x."
-                die "AJP module not supported"
-        fi
-
-        if use nginx_modules_http_mogilefs && use threads; then
-                eerror "mogilefs won't compile with threads support."
-                eerror "Please disable either flag and try again."
-                die "Can't compile mogilefs with threads support"
-        fi
+	if use nginx_modules_http_ajp; then
+		eerror "The AJP module currently doesn't build for nginx >1.8."
+		eerror "It will be reintroduced with the 1.9 series when proven stable."
+		eerror "Either disable it or stick with nginx 1.7.x."
+		die "AJP module not supported"
+	fi
+
+	if use nginx_modules_http_mogilefs && use threads; then
+		eerror "mogilefs won't compile with threads support."
+		eerror "Please disable either flag and try again."
+		die "Can't compile mogilefs with threads support"
+	fi
 }
 
 src_prepare() {
-	epatch "${FILESDIR}/${PN}-1.4.1-fix-perl-install-path.patch"
+	eapply "${FILESDIR}/${PN}-1.4.1-fix-perl-install-path.patch"
 
 	if use nginx_modules_http_upstream_check; then
-		epatch "${FILESDIR}/check-1.9.2".patch
+		eapply -p0 "${FILESDIR}/check-1.9.2".patch
 	fi
 
-	if use nginx_modules_http_security; then
-		cd "${HTTP_SECURITY_MODULE_WD}/nginx/modsecurity"
-		epatch "${FILESDIR}/modsecurity-${HTTP_SECURITY_MODULE_PV}-include-paths.patch"
-		cd -
-	fi
-
-    if use nginx_modules_http_lua; then
-        sed -i -e 's/-llua5.1/-llua/' "${HTTP_LUA_MODULE_WD}/config"
-        # fix for nginx 1.7.5
-        cd "${HTTP_LUA_MODULE_WD}"
-        #epatch "${FILESDIR}/lua-${PN}-1.7.6.patch"
-        cd "${S}"
-    fi
-
-    if use nginx_modules_http_lua; then
-        sed -i -e 's/-llua5.1/-llua/' "${HTTP_LUA_MODULE_WD}/config"
-    fi
+	if use nginx_modules_http_lua; then
+		sed -i -e 's/-llua5.1/-llua/' "${HTTP_LUA_MODULE_WD}/config" || die
+	fi
 
 	find auto/ -type f -print0 | xargs -0 sed -i 's:\&\& make:\&\& \\$(MAKE):' || die
 	# We have config protection, don't rename etc files
@@ -376,27 +349,27 @@ src_prepare() {
 		fi
 	done
 
-	epatch_user
+	eapply_user
 }
 
 src_configure() {
-    # mod_security needs to generate nginx/modsecurity/config before including it
-    if use nginx_modules_http_security; then
-        cd "${HTTP_SECURITY_MODULE_WD}"
-        if use luajit ; then
-          sed -i \
-            -e 's|^\(LUA_PKGNAMES\)=.*|\1="luajit"|' \
-            configure || die
-        fi
-        ./configure \
-            --enable-standalone-module \
-            $(use_enable pcre-jit) \
-            $(use_with nginx_modules_http_lua lua) || die "configure failed for mod_security"
-    fi
+	# mod_security needs to generate nginx/modsecurity/config before including it
+	if use nginx_modules_http_security; then
+		cd "${HTTP_SECURITY_MODULE_WD}"
+		if use luajit ; then
+			sed -i \
+				-e 's|^\(LUA_PKGNAMES\)=.*|\1="luajit"|' \
+				configure || die
+		fi
+		./configure \
+			--enable-standalone-module \
+			$(use_enable pcre-jit) \
+			$(use_with nginx_modules_http_lua lua) || die "configure failed for mod_security"
+	fi
 
-    cd "${S}"
+	cd "${S}"
 
-	local myconf=() http_enabled= mail_enabled=
+	local myconf=() http_enabled= mail_enabled= stream_enabled=
 
 	use aio       && myconf+=( --with-file-aio )
 	use debug     && myconf+=( --with-debug )
@@ -423,18 +396,6 @@ src_configure() {
 		fi
 	done
 
-    if use nginx_modules_http_ngx_pagespeed; then
-    	mv ${WORKDIR}/psol ${NGX_PAGESPEED_MODULE_WD}/
-        cd ${WORKDIR}; epatch "${FILESDIR}/nginx-fix-syslog-pagespeed.patch"; cd ${S}
-        myconf+=(${myconf} --add-module=${NGX_PAGESPEED_MODULE_WD} )
-    fi
-
-	# redislog ( http://www.binpress.com/app/nginx-redislog-module/ )
-	if use nginx_modules_http_redislog; then
-		unzip -d ${WORKDIR} ${FILESDIR}/nginx-redislog-module-1.0.2.zip
-		myconf+=( --add-module=${WORKDIR}/nginx-redislog-module )	
-	fi
-
 	if use nginx_modules_http_fastcgi; then
 		myconf+=( --with-http_realip_module )
 	fi
@@ -467,13 +428,13 @@ src_configure() {
 
 	if use nginx_modules_http_lua; then
 		http_enabled=1
-        if use luajit; then
-            export LUAJIT_LIB=$(pkg-config --variable libdir luajit)
-            export LUAJIT_INC=$(pkg-config --variable includedir luajit)
-        else
-            export LUA_LIB=$(pkg-config --variable libdir lua)
-            export LUA_INC=$(pkg-config --variable includedir lua)
-        fi
+		if use luajit; then
+			export LUAJIT_LIB=$(pkg-config --variable libdir luajit)
+			export LUAJIT_INC=$(pkg-config --variable includedir luajit)
+		else
+			export LUA_LIB=$(pkg-config --variable libdir lua)
+			export LUA_INC=$(pkg-config --variable includedir lua)
+		fi
 		myconf+=( --add-module=${DEVEL_KIT_MODULE_WD} )
 		myconf+=( --add-module=${HTTP_LUA_MODULE_WD} )
 	fi
@@ -495,7 +456,7 @@ src_configure() {
 
 	if use nginx_modules_http_naxsi ; then
 		http_enabled=1
-		myconf+=( --add-module=${HTTP_NAXSI_MODULE_WD} )
+		myconf+=(  --add-module=${HTTP_NAXSI_MODULE_WD} )
 	fi
 
 	if use rtmp ; then
@@ -523,20 +484,25 @@ src_configure() {
 		myconf+=( --add-module=${HTTP_PUSH_STREAM_MODULE_WD} )
 	fi
 
-    if use nginx_modules_http_sticky ; then
-        http_enabled=1
-        myconf+=( --add-module=${HTTP_STICKY_MODULE_WD} )
-    fi
-
-    if use nginx_modules_http_ajp ; then
-        http_enabled=1
-        myconf+=( --add-module=${HTTP_AJP_MODULE_WD} )
-    fi
-
-    if use nginx_modules_http_mogilefs ; then
-        http_enabled=1
-        myconf+=( --add-module=${HTTP_MOGILEFS_MODULE_WD} )
-    fi
+	if use nginx_modules_http_sticky ; then
+		http_enabled=1
+		myconf+=( --add-module=${HTTP_STICKY_MODULE_WD} )
+	fi
+
+	if use nginx_modules_http_mogilefs ; then
+		http_enabled=1
+		myconf+=( --add-module=${HTTP_MOGILEFS_MODULE_WD} )
+	fi
+
+	if use nginx_modules_http_memc ; then
+		http_enabled=1
+		myconf+=( --add-module=${HTTP_MEMC_MODULE_WD} )
+	fi
+
+	if use nginx_modules_http_auth_ldap; then
+		http_enabled=1
+		myconf+=( --add-module=${HTTP_LDAP_MODULE_WD} )
+	fi
 
 	if use http || use http-cache || use http2; then
 		http_enabled=1
@@ -549,6 +515,27 @@ src_configure() {
 		myconf+=( --without-http --without-http-cache )
 	fi
 
+	# Stream modules
+	for mod in $NGINX_MODULES_STREAM; do
+		if use nginx_modules_stream_${mod}; then
+			stream_enabled=1
+		else
+			# Treat stream upstream slightly differently
+			if ! use nginx_modules_stream_upstream; then
+				myconf+=( --without-stream_upstream_hash_module )
+				myconf+=( --without-stream_upstream_least_conn_module )
+				myconf+=( --without-stream_upstream_zone_module )
+			else
+				myconf+=( --without-stream_${stream}_module )
+			fi
+		fi
+	done
+
+	if [ $stream_enabled ]; then
+		myconf+=( --with-stream )
+		use ssl && myconf+=( --with-stream_ssl_module )
+	fi
+
 	# MAIL modules
 	for mod in $NGINX_MODULES_MAIL; do
 		if use nginx_modules_mail_${mod}; then
@@ -565,7 +552,7 @@ src_configure() {
 
 	# custom modules
 	for mod in $NGINX_ADD_MODULES; do
-		myconf+=( --add-module=${mod} )
+		myconf+=(  --add-module=${mod} )
 	done
 
 	# https://bugs.gentoo.org/286772
@@ -585,39 +572,17 @@ src_configure() {
 		--with-cc-opt="-I${EROOT}usr/include" \
 		--with-ld-opt="-L${EROOT}usr/$(get_libdir)" \
 		--http-log-path="${EPREFIX}"/var/log/${PN}/access_log \
-		--http-client-body-temp-path="${EPREFIX}/${NGINX_HOME_TMP}"/client \
-		--http-proxy-temp-path="${EPREFIX}/${NGINX_HOME_TMP}"/proxy \
-		--http-fastcgi-temp-path="${EPREFIX}/${NGINX_HOME_TMP}"/fastcgi \
-		--http-scgi-temp-path="${EPREFIX}/${NGINX_HOME_TMP}"/scgi \
-		--http-uwsgi-temp-path="${EPREFIX}/${NGINX_HOME_TMP}"/uwsgi \
-		${myconf[@]} || die "configure failed"
-
-	if use nginx_modules_http_security; then
-		cd "${HTTP_SECURITY_MODULE_WD}"
-        ./configure \
-                  --enable-standalone-module \
-                  $(use_enable pcre-jit) \
-                  $(use_with nginx_modules_http_lua lua) || die "configure failed for mod_security"
-	fi
-
-    # A purely cosmetic change that makes nginx -V more readable. This can be
-    # good if people outside the gentoo community would troubleshoot and
-    # question the users setup.
-    sed -i -e "s|${WORKDIR}|external_module|g" objs/ngx_auto_config.h || die
-
-    # mod_security needs to generate nginx/modsecurity/config before including it
-    if use nginx_modules_http_security; then
-            cd "${HTTP_SECURITY_MODULE_WD}"
-            if use luajit ; then
-                    sed -i \
-                            -e 's|^\(LUA_PKGNAMES\)=.*|\1="luajit"|' \
-                            configure || die
-            fi
-            ./configure \
-                    --enable-standalone-module \
-                    $(use_enable pcre-jit) \
-                    $(use_with nginx_modules_http_lua lua) || die "configure failed for mod_security"
-    fi
+		--http-client-body-temp-path="${EPREFIX}${NGINX_HOME_TMP}"/client \
+		--http-proxy-temp-path="${EPREFIX}${NGINX_HOME_TMP}"/proxy \
+		--http-fastcgi-temp-path="${EPREFIX}${NGINX_HOME_TMP}"/fastcgi \
+		--http-scgi-temp-path="${EPREFIX}${NGINX_HOME_TMP}"/scgi \
+		--http-uwsgi-temp-path="${EPREFIX}${NGINX_HOME_TMP}"/uwsgi \
+		"${myconf[@]}" || die "configure failed"
+
+	# A purely cosmetic change that makes nginx -V more readable. This can be
+	# good if people outside the gentoo community would troubleshoot and
+	# question the users setup.
+	sed -i -e "s|${WORKDIR}|external_module|g" objs/ngx_auto_config.h || die
 }
 
 src_compile() {
@@ -631,7 +596,7 @@ src_compile() {
 src_install() {
 	emake DESTDIR="${D%/}" install
 
-	cp "${FILESDIR}"/nginx.conf "${ED}"etc/nginx/nginx.conf || die
+	cp "${FILESDIR}"/nginx.conf-r2 "${ED}"etc/nginx/nginx.conf || die
 
 	newinitd "${FILESDIR}"/nginx.initd-r2 nginx
 
@@ -667,8 +632,8 @@ src_install() {
 
 	if use nginx_modules_http_perl; then
 		cd "${S}"/objs/src/http/modules/perl/
-		einstall DESTDIR="${D}" INSTALLDIRS=vendor
-		fixlocalpod
+		emake DESTDIR="${D}" INSTALLDIRS=vendor
+		perl_delete_localpod
 	fi
 
 	if use nginx_modules_http_cache_purge; then
@@ -701,15 +666,10 @@ src_install() {
 		dodoc "${HTTP_UPSTREAM_CHECK_MODULE_WD}"/{README,CHANGES}
 	fi
 
-	if use nginx_modules_http_metrics; then
-		docinto ${HTTP_METRICS_MODULE_P}
-		dodoc "${HTTP_METRICS_MODULE_WD}"/README.md
-	fi
-
 	if use nginx_modules_http_naxsi; then
 		insinto /etc/nginx
 		doins "${HTTP_NAXSI_MODULE_WD}"/../naxsi_config/naxsi_core.rules
-    fi
+	fi
 
 	if use rtmp; then
 		docinto ${RTMP_MODULE_P}
@@ -731,44 +691,44 @@ src_install() {
 		dodoc "${HTTP_SECURITY_MODULE_WD}"/{CHANGES,README.TXT,authors.txt}
 	fi
 
-    if use nginx_modules_http_push_stream; then
-       docinto ${HTTP_PUSH_STREAM_MODULE_P}
-       dodoc "${HTTP_PUSH_STREAM_MODULE_WD}"/{AUTHORS,CHANGELOG.textile,README.textile}
-    fi
-
-    if use nginx_modules_http_sticky; then
-        docinto ${HTTP_STICKY_MODULE_P}
-        dodoc "${HTTP_STICKY_MODULE_WD}"/{README.md,Changelog.txt,docs/sticky.pdf}
-    fi
-
-    if use nginx_modules_http_memc; then
-        docinto ${HTTP_MEMC_MODULE_P}
-        dodoc "${HTTP_MEMC_MODULE_WD}"/README.markdown
-    fi
-
-    if use nginx_modules_http_ajp; then
-        docinto ${HTTP_AJP_MODULE_P}
-        dodoc "${HTTP_AJP_MODULE_WD}"/README
-    fi
-
-    if use nginx_modules_http_push_stream; then
-	docinto ${HTTP_PUSH_STREAM_MODULE_P}
-	dodoc "${HTTP_PUSH_STREAM_MODULE_WD}"/{AUTHORS,CHANGELOG.textile,README.textile}
-    fi
+	if use nginx_modules_http_push_stream; then
+		docinto ${HTTP_PUSH_STREAM_MODULE_P}
+		dodoc "${HTTP_PUSH_STREAM_MODULE_WD}"/{AUTHORS,CHANGELOG.textile,README.textile}
+	fi
+
+	if use nginx_modules_http_sticky; then
+		docinto ${HTTP_STICKY_MODULE_P}
+		dodoc "${HTTP_STICKY_MODULE_WD}"/{README.md,Changelog.txt,docs/sticky.pdf}
+	fi
+
+	if use nginx_modules_http_memc; then
+		docinto ${HTTP_MEMC_MODULE_P}
+		dodoc "${HTTP_MEMC_MODULE_WD}"/README.markdown
+	fi
+
+	if use nginx_modules_http_auth_ldap; then
+		docinto ${HTTP_LDAP_MODULE_P}
+		dodoc "${HTTP_LDAP_MODULE_WD}"/example.conf
+	fi
 }
 
 pkg_postinst() {
-       if use ssl; then
-              if [ ! -f "${EROOT}"etc/ssl/${PN}/${PN}.key ]; then
-                      install_cert /etc/ssl/${PN}/${PN}
-                      use prefix || chown ${PN}:${PN} "${EROOT}"etc/ssl/${PN}/${PN}.{crt,csr,key,pem}
-               fi
-       fi
-
-       if use nginx_modules_http_lua && use http2; then
-               ewarn "Lua 3rd party module author warns against using ${P} with"
-               ewarn "NGINX_MODULES_HTTP=\"lua http2\". For more info, see http://git.io/OldLsg"
-       fi
+	if use ssl; then
+		if [ ! -f "${EROOT}"etc/ssl/${PN}/${PN}.key ]; then
+			install_cert /etc/ssl/${PN}/${PN}
+			use prefix || chown ${PN}:${PN} "${EROOT}"etc/ssl/${PN}/${PN}.{crt,csr,key,pem}
+		fi
+	fi
+
+	if use nginx_modules_http_spdy; then
+		ewarn "In nginx 1.9.5 the spdy module was superseded by http2."
+		ewarn "Update your configs and package.use accordingly."
+	fi
+
+	if use nginx_modules_http_lua && use http2; then
+		ewarn "Lua 3rd party module author warns against using ${P} with"
+		ewarn "NGINX_MODULES_HTTP=\"lua http2\". For more info, see http://git.io/OldLsg"
+	fi
 
 	# This is the proper fix for bug #458726/#469094, resp. CVE-2013-0337 for
 	# existing installations
