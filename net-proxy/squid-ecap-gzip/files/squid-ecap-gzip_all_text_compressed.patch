--- src/adapter_gzip.cc	2015-09-30 13:24:45.839685428 +0100
+++ src/adapter_gzip.cc	2015-09-30 13:31:54.543811647 +0100
@@ -360,9 +360,11 @@ void Adapter::Xaction::start() {
 
     if(adapted->header().hasAny(contentTypeName)) {
         const libecap::Header::Value contentType = adapted->header().value(contentTypeName);
+	std::string contentTypeType; // store contenttype substr
         if(contentType.size > 0) {
             std::string contentTypeString = contentType.toString(); // expensive
-            if(strstr(contentTypeString.c_str(),"text/html")) {
+	    contentTypeType = contentTypeString.substr(0,4);
+	    if(strstr(contentTypeType.c_str(),"text")) {
                 this->requirements.responseContentTypeOk = true;
             }
         }
@@ -386,9 +388,9 @@ void Adapter::Xaction::start() {
     adapted->header().removeAny(libecap::headerContentLength);
 
     // add a custom header
-    static const libecap::Name name("X-Ecap");
-    const libecap::Header::Value value = libecap::Area::FromTempString("VIGOS eCAP GZIP Adapter");
-    adapted->header().add(name, value);
+    // static const libecap::Name name("X-Ecap");
+    // const libecap::Header::Value value = libecap::Area::FromTempString("VIGOS eCAP GZIP Adapter");
+    // adapted->header().add(name, value);
 
     // Add "Vary: Accept-Encoding" response header if Content-Type is "text/html"
     if(requirements.responseContentTypeOk) {
