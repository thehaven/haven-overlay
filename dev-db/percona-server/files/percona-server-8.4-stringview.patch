diff --git a/plugin/x/tests/driver/connector/session_holder.cc b/plugin/x/tests/driver/connector/session_holder.cc
index ab21d8e..9256ffe 100644
--- a/plugin/x/tests/driver/connector/session_holder.cc
+++ b/plugin/x/tests/driver/connector/session_holder.cc
@@ -357,8 +357,8 @@ xcl::Handler_result Session_holder::count_received_messages(
   const auto server_message_name =
       Mysqlx::ServerMessages::descriptor()->full_name();
   const bool is_empty_message = (protobuf_message_name == server_message_name);
-  const std::string &msg_name = !is_empty_message
-                                    ? msg.GetDescriptor()->full_name()
+  const std::string msg_name = !is_empty_message
+                                    ? std::string(msg.GetDescriptor()->full_name())
                                     : server_msgs_by_id[msg_id].second;
 
   ++m_received_msg_counters[msg_name];
@@ -367,11 +367,11 @@ xcl::Handler_result Session_holder::count_received_messages(
     return xcl::Handler_result::Continue;
 
   static const std::array<std::string, 5> k_notice_type_id = {
-      Mysqlx::Notice::Warning::descriptor()->full_name(),
-      Mysqlx::Notice::SessionVariableChanged::descriptor()->full_name(),
-      Mysqlx::Notice::SessionStateChanged::descriptor()->full_name(),
-      Mysqlx::Notice::GroupReplicationStateChanged::descriptor()->full_name(),
-      Mysqlx::Notice::ServerHello::descriptor()->full_name(),
+      std::string(Mysqlx::Notice::Warning::descriptor()->full_name()),
+      std::string(Mysqlx::Notice::SessionVariableChanged::descriptor()->full_name()),
+      std::string(Mysqlx::Notice::SessionStateChanged::descriptor()->full_name()),
+      std::string(Mysqlx::Notice::GroupReplicationStateChanged::descriptor()->full_name()),
+      std::string(Mysqlx::Notice::ServerHello::descriptor()->full_name()),
   };
 
   const auto notice_type =
